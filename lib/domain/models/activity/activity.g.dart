// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'activity.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

_$ActivityImpl _$$ActivityImplFromJson(Map<String, dynamic> json) =>
    _$ActivityImpl(
      activitySeqNo: json['activitySeqNo'] as int?,
      activityNo: json['activityNo'] as int?,
      relActivityNo: json['relActivityNo'] as int?,
      activityNm1: json['activityNm1'] as String?,
      activityNm2: json['activityNm2'] as String?,
      activityCategory: json['activityCategory'] as String?,
      activityStatus: json['activityStatus'] as String?,
      activityModule: json['activityModule'] as String?,
      activityStartDate: json['activityStartDate'] == null
          ? null
          : DateTime.parse(json['activityStartDate'] as String),
      activityEndDate: json['activityEndDate'] == null
          ? null
          : DateTime.parse(json['activityEndDate'] as String),
      activityFinalRegDate: json['activityFinalRegDate'] == null
          ? null
          : DateTime.parse(json['activityFinalRegDate'] as String),
      activityFinalCancelDate: json['activityFinalCancelDate'] == null
          ? null
          : DateTime.parse(json['activityFinalCancelDate'] as String),
      activityStartTime: json['activityStartTime'] as String?,
      activityEndTime: json['activityEndTime'] as String?,
      activityMaxAttendents: json['activityMaxAttendents'] as int?,
      activityMinAttendents: json['activityMinAttendents'] as int?,
      activityHours: json['activityHours'] as int?,
      activityPoints: json['activityPoints'] as int?,
      activityOrganizer: json['activityOrganizer'] as int?,
      activityLocation: json['activityLocation'] as int?,
      activityLocationNm: json['activityLocationNm'],
      activityContact: json['activityContact'] as int?,
      activityContactNm: json['activityContactNm'],
      activityContactEmail: json['activityContactEmail'],
      activityInt1: json['activityInt1'] as int?,
      activityInt2: json['activityInt2'] as int?,
      chkActivityPublishWeb: json['chkActivityPublishWeb'] as bool?,
      chkOpt1: json['chkOpt1'] as bool?,
      chkOpt2: json['chkOpt2'] as bool?,
      activityDate1: json['activityDate1'],
      activityDate2: json['activityDate2'],
      activityArticleNo: json['activityArticleNo'] as String?,
      activityPrice: json['activityPrice'] as int?,
      activityAccountGr1: json['activityAccountGr1'] as int?,
      activityAccountGr2: json['activityAccountGr2'] as int?,
      activityAccountGr3: json['activityAccountGr3'] as int?,
      activityNote: json['activityNote'] as String?,
      activityChBy: json['activityChBy'] as String?,
      activityChDt: json['activityChDt'] == null
          ? null
          : DateTime.parse(json['activityChDt'] as String),
      activityCrBy: json['activityCrBy'] as String?,
      activityCrDt: json['activityCrDt'] == null
          ? null
          : DateTime.parse(json['activityCrDt'] as String),
      activityWebNote: json['activityWebNote'] as String?,
      activityDiplomaText: json['activityDiplomaText'],
      orderSeqNo: json['orderSeqNo'] as int?,
      activitySal: json['activitySal'] as String?,
      activityActRel1: json['activityActRel1'] as int?,
      activityOptBit3: json['activityOptBit3'] as bool?,
      activityOptBit4: json['activityOptBit4'] as bool?,
      activityOptBit5: json['activityOptBit5'] as bool?,
      activityOptBit6: json['activityOptBit6'] as bool?,
      activityOptBit7: json['activityOptBit7'] as bool?,
      activityOptDate3: json['activityOptDate3'],
      activityOptDate4: json['activityOptDate4'],
      activityOptChar1: json['activityOptChar1'] as String?,
      activityWebNoteExtended: json['activityWebNoteExtended'] as String?,
      activityUrl: json['activityUrl'],
      activityToken: json['activityToken'] as String?,
      openForAll: json['openForAll'] as bool?,
      multiRegister: json['multiRegister'] as bool?,
      multiRegisterGrouped: json['multiRegisterGrouped'] as bool?,
      multiRegisterMin: json['multiRegisterMin'] as int?,
      multiRegisterMax: json['multiRegisterMax'] as int?,
      emailConfirmation: json['emailConfirmation'] as String?,
      locationNm: json['locationNm'] as String?,
      hasPayment: json['hasPayment'],
      keepImgRatio: json['keepImgRatio'] as bool?,
      registerPersonContact: json['registerPersonContact'] as bool?,
      promoted: json['promoted'] as bool?,
      requireLogin: json['requireLogin'] as bool?,
      companyActivity: json['companyActivity'] as bool?,
      img: json['img'],
      multipleOptions: json['multipleOptions'] as bool?,
      children: json['children'],
    );

Map<String, dynamic> _$$ActivityImplToJson(_$ActivityImpl instance) =>
    <String, dynamic>{
      'activitySeqNo': instance.activitySeqNo,
      'activityNo': instance.activityNo,
      'relActivityNo': instance.relActivityNo,
      'activityNm1': instance.activityNm1,
      'activityNm2': instance.activityNm2,
      'activityCategory': instance.activityCategory,
      'activityStatus': instance.activityStatus,
      'activityModule': instance.activityModule,
      'activityStartDate': instance.activityStartDate?.toIso8601String(),
      'activityEndDate': instance.activityEndDate?.toIso8601String(),
      'activityFinalRegDate': instance.activityFinalRegDate?.toIso8601String(),
      'activityFinalCancelDate':
          instance.activityFinalCancelDate?.toIso8601String(),
      'activityStartTime': instance.activityStartTime,
      'activityEndTime': instance.activityEndTime,
      'activityMaxAttendents': instance.activityMaxAttendents,
      'activityMinAttendents': instance.activityMinAttendents,
      'activityHours': instance.activityHours,
      'activityPoints': instance.activityPoints,
      'activityOrganizer': instance.activityOrganizer,
      'activityLocation': instance.activityLocation,
      'activityLocationNm': instance.activityLocationNm,
      'activityContact': instance.activityContact,
      'activityContactNm': instance.activityContactNm,
      'activityContactEmail': instance.activityContactEmail,
      'activityInt1': instance.activityInt1,
      'activityInt2': instance.activityInt2,
      'chkActivityPublishWeb': instance.chkActivityPublishWeb,
      'chkOpt1': instance.chkOpt1,
      'chkOpt2': instance.chkOpt2,
      'activityDate1': instance.activityDate1,
      'activityDate2': instance.activityDate2,
      'activityArticleNo': instance.activityArticleNo,
      'activityPrice': instance.activityPrice,
      'activityAccountGr1': instance.activityAccountGr1,
      'activityAccountGr2': instance.activityAccountGr2,
      'activityAccountGr3': instance.activityAccountGr3,
      'activityNote': instance.activityNote,
      'activityChBy': instance.activityChBy,
      'activityChDt': instance.activityChDt?.toIso8601String(),
      'activityCrBy': instance.activityCrBy,
      'activityCrDt': instance.activityCrDt?.toIso8601String(),
      'activityWebNote': instance.activityWebNote,
      'activityDiplomaText': instance.activityDiplomaText,
      'orderSeqNo': instance.orderSeqNo,
      'activitySal': instance.activitySal,
      'activityActRel1': instance.activityActRel1,
      'activityOptBit3': instance.activityOptBit3,
      'activityOptBit4': instance.activityOptBit4,
      'activityOptBit5': instance.activityOptBit5,
      'activityOptBit6': instance.activityOptBit6,
      'activityOptBit7': instance.activityOptBit7,
      'activityOptDate3': instance.activityOptDate3,
      'activityOptDate4': instance.activityOptDate4,
      'activityOptChar1': instance.activityOptChar1,
      'activityWebNoteExtended': instance.activityWebNoteExtended,
      'activityUrl': instance.activityUrl,
      'activityToken': instance.activityToken,
      'openForAll': instance.openForAll,
      'multiRegister': instance.multiRegister,
      'multiRegisterGrouped': instance.multiRegisterGrouped,
      'multiRegisterMin': instance.multiRegisterMin,
      'multiRegisterMax': instance.multiRegisterMax,
      'emailConfirmation': instance.emailConfirmation,
      'locationNm': instance.locationNm,
      'hasPayment': instance.hasPayment,
      'keepImgRatio': instance.keepImgRatio,
      'registerPersonContact': instance.registerPersonContact,
      'promoted': instance.promoted,
      'requireLogin': instance.requireLogin,
      'companyActivity': instance.companyActivity,
      'img': instance.img,
      'multipleOptions': instance.multipleOptions,
      'children': instance.children,
    };
